name: sso_local

services:
  backend:
    build:
      context: ${BACKEND_CONTEXT:-../../auth-service}
      dockerfile: Dockerfile
    depends_on:
      db-oauth:
        condition: service_healthy
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_URL: http://localhost:${AUTH_PORT:-8080}
      DB_CONNECTION: mysql
      DB_HOST: db-oauth
      DB_PORT: 3306
      DB_DATABASE: ${AUTH_DB_NAME:-app}
      DB_USERNAME: ${AUTH_DB_USER:-app}
      DB_PASSWORD: ${AUTH_DB_PASS:-secret}
      CACHE_DRIVER: ${CACHE_DRIVER:-file}
      CACHE_STORE: ${CACHE_STORE:-file}
      SESSION_DRIVER: ${SESSION_DRIVER:-file}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION:-sync}
      PASSPORT_SKIP_CONSENT: ${PASSPORT_SKIP_CONSENT:-false}
    ports:
      - "${AUTH_PORT:-8080}:80"
    volumes:
      - ${BACKEND_CONTEXT:-../../auth-service}:/var/www/html:Z
      - vendor:/var/www/html/vendor
      - storage:/var/www/html/storage
      - bootstrap_cache:/var/www/html/bootstrap/cache
    command:
      - bash
      - -lc
      - >
        set -e;
        cd /var/www/html;
        mkdir -p storage/framework/{sessions,views,cache,data} resources/views;
        chown -R www-data:www-data storage bootstrap/cache || true;
        chmod -R ug+rw storage bootstrap/cache || true;
        if [ -x /usr/local/bin/entrypoint.sh ]; then
          exec /usr/local/bin/entrypoint.sh;
        else
          exec apache2-foreground;
        fi
    networks: [sso_net]

  web_tienda:
    image: node:20-alpine
    working_dir: /app
    depends_on:
      backend:
        condition: service_started
    environment:
      VITE_AUTH_URL: ${AUTH_URL:-http://localhost:8080}
      VITE_API_URL:  ${AUTH_URL:-http://localhost:8080}
      VITE_REDIRECT_URI: ${TIENDA_REDIRECT:-http://localhost:5174/auth/callback}
      VITE_OAUTH_CLIENT_ID: ${TIENDA_CLIENT_ID:-}
      VITE_OAUTH_SCOPES: ${TIENDA_SCOPES:-profile:read orders:read}
      CHOKIDAR_USEPOLLING: "1"
    ports:
      - "5174:5174"
    volumes:
      - ../../tienda-web:/app
      - tienda_node_modules:/app/node_modules
    command:
      - sh
      - -lc
      - >
        set -e;
        if [ ! -f package.json ]; then
          echo 'ðŸ“­ tienda-web: no hay package.json'; exec sleep infinity;
        fi;
        if [ ! -x node_modules/.bin/vite ]; then
          echo 'ðŸ“¦ tienda-web: instalando dependencias...'; npm install;
        fi;
        exec npm run dev -- --host --port 5174
    networks: [sso_net]

  web_publicadores:
    image: node:20-alpine
    working_dir: /app
    depends_on:
      backend:
        condition: service_started
    environment:
      VITE_AUTH_URL: ${AUTH_URL:-http://localhost:8080}
      VITE_API_URL:  ${AUTH_URL:-http://localhost:8080}
      VITE_REDIRECT_URI: ${PUBLICADORES_REDIRECT:-http://localhost:5175/auth/callback}
      VITE_OAUTH_CLIENT_ID: ${PUBLICADORES_CLIENT_ID:-}
      VITE_OAUTH_SCOPES: ${PUBLICADORES_SCOPES:-profile:read catalog:read catalog:write}
      CHOKIDAR_USEPOLLING: "1"
    ports:
      - "5175:5175"
    volumes:
      - ../../publicadores-web:/app
      - publicadores_node_modules:/app/node_modules
    command:
      - sh
      - -lc
      - >
        set -e;
        if [ ! -f package.json ]; then
          echo 'ðŸ“­ publicadores-web: no hay package.json'; exec sleep infinity;
        fi;
        if [ ! -x node_modules/.bin/vite ]; then
          echo 'ðŸ“¦ publicadores-web: instalando dependencias...'; npm install;
        fi;
        exec npm run dev -- --host --port 5175
    networks: [sso_net]

  db-oauth:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --sql-mode=NO_ENGINE_SUBSTITUTION
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE:      ${AUTH_DB_NAME:-app}
      MYSQL_USER:          ${AUTH_DB_USER:-app}
      MYSQL_PASSWORD:      ${AUTH_DB_PASS:-secret}
    ports:
      - "${DB_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${AUTH_DB_USER:-app} -p${AUTH_DB_PASS:-secret}"]
      interval: 5s
      timeout: 2s
      retries: 30
    volumes:
      - dbdata:/var/lib/mysql
    networks: [sso_net]

volumes:
  dbdata:
  vendor:
  storage:
  bootstrap_cache:
  tienda_node_modules:
  publicadores_node_modules:

networks:
  sso_net:
